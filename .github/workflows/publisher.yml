name: Dart Publisher

on:
  push:
    branches: [main]
    paths:
      - .github/workflows/publisher.yml
      - pubspec.yaml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1.3

      - name: Checkout Repo
        uses: actions/checkout@v3
      - name: Validate
        uses: peiffer-innovations/actions-flutter-validate@v1.1.2
        with:
          flutter_package: false

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.5.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.DEPLOY_SERVICE_ACCOUNT }}
          export_default_credentials: true

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          printf '${{ secrets.RUN_SERVICE_ACCOUNT }}' >> ./service-account.json

          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} .
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{  github.sha }}
        working-directory: example

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.9.0
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
          region: ${{ env.REGION }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      # - name: Publish
      #   uses: peiffer-innovations/actions-pub-publish@v1.0.1
      #   with:
      #     credentials: ${{ secrets.CREDENTIAL_JSON }}

      - uses: peiffer-innovations/actions-dart-version-autotag@v1.0.1
        with:
          token: ${{ secrets.REPO_TOKEN }}
